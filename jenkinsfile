pipeline {
    agent any
    tools {
        nodejs 'NodeJS 21.4.0'
    }
    environment {
        GITHUB_TOKEN = credentials('github-token')
    }
    stages {
        //checkout stage to main branch
        // stage('Update local codebase') {
        //     steps {
        //         sh 'git clone https://github.com/Marwizz/react-ci-cd-demo.git'
        //         sh 'cd react-ci-cd-demo'
        //         sh 'git checkout main'
        //         sh 'git pull origin main'
        //     }
        // }

        stage('Set up Node.js') {
            steps {
                nodejs(nodeJSInstallationName: 'NodeJS 21.4.0') {
                    sh 'node --version'
                    sh 'npm --version'
                }
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Check code practices with ESLint') {
            steps {
                sh 'npm run lint'
            }
        }

        stage('Format code with Prettier') {
            steps {
                sh 'npm run format'
            }
        }

        stage('Remove console.log statements') {
            steps {
                sh 'find . -name "node_modules" -prune -o -name "*.js" -exec sed -i \'/console\\.log(/d\' {} \\;'
            }
        }

        stage('Commit changes') {
            steps {
                sh '''
                    git config --global user.email "shahaayush349@gmail.com"
                    git config --global user.name "Shah-Aayush"
                    git add .
                    git diff-index --quiet HEAD || git commit -m "Apply code formatting and remove console.log statements"
                '''
            }
        }

        stage('Push changes') {
            steps {
                sh 'git push origin main'
            }
        }

        stage('Run tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build app') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Clean up') {
            steps {
                sh 'rm -rf build'
            }
        }
    }
}